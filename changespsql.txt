Query:-1 :- 8 mins

SELECT callcenter_calldetail.campaign_name as campaign_name , usr.username as user , CONCAT(usr.first_name, ' ' ,usr.last_name) as full_name , callcenter_calldetail.customer_cid as customer_cid , callcenter_calldetail.uniqueid as lan , date_trunc('second', COALESCE(callcenter_diallereventlog.init_time, callcenter_calldetail.init_time) at time zone 'Asia/Kolkata') as init_time , COALESCE(callcenter_diallereventlog.bill_sec, callcenter_calldetail.bill_sec) as talk_time , COALESCE(callcenter_diallereventlog.call_duration, callcenter_calldetail.call_duration) as call_duration , COALESCE(callcenter_diallereventlog.dialed_status, callcenter_calldetail.dialed_status) as dialed_status , callcenter_cdrfeedbck.primary_dispo as primary_dispo , callcenter_cdrfeedbck.feedback ->> 'next_action_date_time' as "next_action_date_time" , callcenter_cdrfeedbck.feedback ->> 'rfd' as "rfd" , callcenter_cdrfeedbck.comment as comment from callcenter_calldetail left join callcenter_diallereventlog on callcenter_diallereventlog.session_uuid = callcenter_calldetail.session_uuid left join callcenter_cdrfeedbck on callcenter_cdrfeedbck.calldetail_id=callcenter_calldetail.id left join callcenter_user usr on usr.id = callcenter_calldetail.user_id left join callcenter_user supr on supr.id = usr.reporting_to_id left join (select sms.session_uuid as session_uuid, string_agg(template.name, ', ') as name from callcenter_smslog sms left join callcenter_smstemplate template on sms.template_id = template.id left join callcenter_calldetail calldetail on calldetail.session_uuid = sms.session_uuid where calldetail.campaign_name IN ('Rani_Predictive', 'HFC_Adhoc', 'ManualCallBack', 'Secured_South', 'North_Recovery', 'West_Recovery', 'South_Recovery', 'Rural_Sales', 'Mumbai_Predictive', 'Telugu', 'SOUTH_HFC', 'Viba_Predictive', 'GGN_BKT', 'GGN_BCP', 'NORTH_CAT_A', 'NORTH_CAT_C', 'NORTH_ENACH', 'WEST_CAT_C', 'WEST_CAT_A', 'SOUTH_CAT_A', 'SOUTH_CAT_C', 'SOUTH_ENACH', 'WEST_ENACH', 'RK_Pred', 'RD_Pred', 'MR_Pred', 'PM_Pred', 'GGN_Predictive', 'Telugu_PR', 'Kannada_PR', 'Tamil_PR_Test', 'Mumbai_Caution_Calling', 'HFC_Cloud', 'Chennai_Secured', 'Mumbai_PL', 'Mumbai_HFC', 'Mum_LAP_BIL_TW', 'Mumbai', 'Chennai_Caution', 'Chennai_Rural', 'South_Secured', 'Malyalam', 'Tamil', 'Kannada') group by sms.session_uuid) sms on sms.session_uuid = callcenter_calldetail.session_uuid  WHERE ( callcenter_calldetail.created at time zone 'Asia/Kolkata' >= '2025-01-15T00:00:00' and callcenter_calldetail.created at time zone 'Asia/Kolkata' <= '2025-01-22T10:12:00') and (callcenter_calldetail.campaign_name IN ('Rani_Predictive', 'HFC_Adhoc', 'ManualCallBack', 'Secured_South', 'North_Recovery', 'West_Recovery', 'South_Recovery', 'Rural_Sales', 'Mumbai_Predictive', 'Telugu', 'SOUTH_HFC', 'Viba_Predictive', 'GGN_BKT', 'GGN_BCP', 'NORTH_CAT_A', 'NORTH_CAT_C', 'NORTH_ENACH', 'WEST_CAT_C', 'WEST_CAT_A', 'SOUTH_CAT_A', 'SOUTH_CAT_C', 'SOUTH_ENACH', 'WEST_ENACH', 'RK_Pred', 'RD_Pred', 'MR_Pred', 'PM_Pred', 'GGN_Predictive', 'Telugu_PR', 'Kannada_PR', 'Tamil_PR_Test', 'Mumbai_Caution_Calling', 'HFC_Cloud', 'Chennai_Secured', 'Mumbai_PL', 'Mumbai_HFC', 'Mum_LAP_BIL_TW', 'Mumbai', 'Chennai_Caution', 'Chennai_Rural', 'South_Secured', 'Malyalam', 'Tamil', 'Kannada')) order by callcenter_calldetail.created desc



Query:-2

SELECT callcenter_calldetail.campaign_name as campaign_name , usr.username as user , CONCAT(usr.first_name, ' ' ,usr.last_name) as full_name , callcenter_calldetail.phonebook as phonebook , callcenter_calldetail.customer_cid as customer_cid , callcenter_calldetail.contact_id as contact_id , callcenter_calldetail.uniqueid as lan , callcenter_calldetail.session_uuid as session_uuid , date_trunc('second', COALESCE(callcenter_diallereventlog.init_time, callcenter_calldetail.init_time) at time zone 'Asia/Kolkata') as init_time , date_trunc('second', COALESCE(callcenter_diallereventlog.ring_time, callcenter_calldetail.ring_time) at time zone 'Asia/Kolkata') as ring_time , date_trunc('second', COALESCE(callcenter_diallereventlog.connect_time, callcenter_calldetail.connect_time) at time zone 'Asia/Kolkata') as connect_time , date_trunc('second', COALESCE(callcenter_diallereventlog.hangup_time, callcenter_calldetail.hangup_time) at time zone 'Asia/Kolkata') as hangup_time , COALESCE(callcenter_diallereventlog.wait_time, callcenter_calldetail.wait_time) as wait_time , COALESCE(callcenter_diallereventlog.ring_duration, callcenter_calldetail.ring_duration) as ring_duration , COALESCE(callcenter_diallereventlog.hold_time, callcenter_calldetail.hold_time) as hold_time , callcenter_calldetail.callflow as callflow , callcenter_calldetail.callmode as callmode , COALESCE(callcenter_diallereventlog.bill_sec, callcenter_calldetail.bill_sec) as talk_time , COALESCE(callcenter_diallereventlog.ivr_duration, callcenter_calldetail.ivr_duration) as ivr_duration , COALESCE(callcenter_diallereventlog.call_duration, callcenter_calldetail.call_duration) as call_duration , callcenter_calldetail.feedback_time as wrapup_time , cast(COALESCE(callcenter_diallereventlog.call_duration, callcenter_calldetail.call_duration)::interval + feedback_time::interval as text) as call_length , callcenter_calldetail.hangup_source as hangup_source , callcenter_calldetail.internal_tc_number as internal_tc_number , callcenter_calldetail.external_tc_number as external_tc_number , callcenter_calldetail.progressive_time as progressive_time , callcenter_calldetail.preview_time as preview_time , callcenter_calldetail.predictive_wait_time as predictive_wait_time , callcenter_calldetail.inbound_wait_time as inbound_wait_time , callcenter_calldetail.blended_wait_time as blended_wait_time , COALESCE(callcenter_diallereventlog.hangup_cause, callcenter_calldetail.hangup_cause) as hangup_cause , COALESCE(callcenter_diallereventlog.hangup_cause_code, callcenter_calldetail.hangup_cause_code) as hangup_cause_code , COALESCE(callcenter_diallereventlog.dialed_status, callcenter_calldetail.dialed_status) as dialed_status , callcenter_cdrfeedbck.primary_dispo as primary_dispo , callcenter_cdrfeedbck.feedback ->> 'referral_status' as "referral_status" , callcenter_cdrfeedbck.feedback ->> 'paid_onlin' as "paid_onlin" , callcenter_cdrfeedbck.feedback ->> 'ptp/pu_date' as "ptp/pu_date" , callcenter_cdrfeedbck.feedback ->> 'pu_date' as "pu_date" , callcenter_cdrfeedbck.feedback ->> 'pu_amount' as "pu_amount" , callcenter_cdrfeedbck.feedback ->> 'ptp_amount' as "ptp_amount" , callcenter_cdrfeedbck.feedback ->> 'next_action_code' as "next_action_code" , callcenter_cdrfeedbck.feedback ->> 'rfd' as "rfd" , callcenter_cdrfeedbck.feedback ->> 'follow_up' as "follow_up" , callcenter_cdrfeedbck.feedback ->> 'ptp_date' as "ptp_date" , callcenter_cdrfeedbck.feedback ->> 'paid_in_cash_to_agent' as "paid_in_cash_to_agent" , callcenter_cdrfeedbck.feedback ->> 'paid_in_branch' as "paid_in_branch" , callcenter_cdrfeedbck.feedback ->> 'on_or_before_ptp_date' as "on_or_before_ptp_date" , callcenter_cdrfeedbck.feedback ->> 'action_code' as "action_code" , callcenter_cdrfeedbck.feedback ->> 'next_action_date_time' as "next_action_date_time" , CASE WHEN sms.name IS NULL THEN 'No' ELSE 'Yes' END as sms_sent , sms.name as sms_message , callcenter_cdrfeedbck.comment as comment from callcenter_calldetail left join callcenter_diallereventlog on callcenter_diallereventlog.session_uuid = callcenter_calldetail.session_uuid left join callcenter_cdrfeedbck on callcenter_cdrfeedbck.calldetail_id=callcenter_calldetail.id left join callcenter_user usr on usr.id = callcenter_calldetail.user_id left join callcenter_user supr on supr.id = usr.reporting_to_id left join (select sms.session_uuid as session_uuid, string_agg(template.name, ', ') as name from callcenter_smslog sms left join callcenter_smstemplate template on sms.template_id = template.id left join callcenter_calldetail calldetail on calldetail.session_uuid = sms.session_uuid where calldetail.campaign_name IN ('Rani_Predictive', 'HFC_Adhoc', 'ManualCallBack', 'Secured_South', 'North_Recovery', 'West_Recovery', 'South_Recovery', 'Rural_Sales', 'Mumbai_Predictive', 'Telugu', 'SOUTH_HFC', 'Viba_Predictive', 'GGN_BKT', 'GGN_BCP', 'NORTH_CAT_A', 'NORTH_CAT_C', 'NORTH_ENACH', 'WEST_CAT_C', 'WEST_CAT_A', 'SOUTH_CAT_A', 'SOUTH_CAT_C', 'SOUTH_ENACH', 'WEST_ENACH', 'RK_Pred', 'RD_Pred', 'MR_Pred', 'PM_Pred', 'GGN_Predictive', 'Telugu_PR', 'Kannada_PR', 'Tamil_PR_Test', 'Mumbai_Caution_Calling', 'HFC_Cloud', 'Chennai_Secured', 'Mumbai_PL', 'Mumbai_HFC', 'Mum_LAP_BIL_TW', 'Mumbai', 'Chennai_Caution', 'Chennai_Rural', 'South_Secured', 'Malyalam', 'Tamil', 'Kannada') group by sms.session_uuid) sms on sms.session_uuid = callcenter_calldetail.session_uuid  WHERE ( callcenter_calldetail.created at time zone 'Asia/Kolkata' >= '2025-01-04T00:00:00' and callcenter_calldetail.created at time zone 'Asia/Kolkata' <= '2025-01-21T23:22:00') and (callcenter_calldetail.campaign_name IN ('Rani_Predictive', 'HFC_Adhoc', 'ManualCallBack', 'Secured_South', 'North_Recovery', 'West_Recovery', 'South_Recovery', 'Rural_Sales', 'Mumbai_Predictive', 'Telugu', 'SOUTH_HFC', 'Viba_Predictive', 'GGN_BKT', 'GGN_BCP', 'NORTH_CAT_A', 'NORTH_CAT_C', 'NORTH_ENACH', 'WEST_CAT_C', 'WEST_CAT_A', 'SOUTH_CAT_A', 'SOUTH_CAT_C', 'SOUTH_ENACH', 'WEST_ENACH', 'RK_Pred', 'RD_Pred', 'MR_Pred', 'PM_Pred', 'GGN_Predictive', 'Telugu_PR', 'Kannada_PR', 'Tamil_PR_Test', 'Mumbai_Caution_Calling', 'HFC_Cloud', 'Chennai_Secured', 'Mumbai_PL', 'Mumbai_HFC', 'Mum_LAP_BIL_TW', 'Mumbai', 'Chennai_Caution', 'Chennai_Rural', 'South_Secured', 'Malyalam', 'Tamil', 'Kannada')) order by callcenter_calldetail.created desc

Query 3:- 

SELECT "callcenter_diallereventlog"."id", "callcenter_diallereventlog"."site_id", "callcenter_diallereventlog"."campaign_id", "callcenter_diallereventlog"."campaign_name", "callcenter_diallereventlog"."user_id", "callcenter_diallereventlog"."phonebook", "callcenter_diallereventlog"."contact_id", "callcenter_diallereventlog"."session_uuid", "callcenter_diallereventlog"."a_leg_uuid", "callcenter_diallereventlog"."b_leg_uuid", "callcenter_diallereventlog"."init_time", "callcenter_diallereventlog"."ring_time", "callcenter_diallereventlog"."ring_duration", "callcenter_diallereventlog"."connect_time", "callcenter_diallereventlog"."wait_time", "callcenter_diallereventlog"."hold_time", "callcenter_diallereventlog"."media_time", "callcenter_diallereventlog"."callflow", "callcenter_diallereventlog"."callmode", "callcenter_diallereventlog"."customer_cid", "callcenter_diallereventlog"."destination_extension", "callcenter_diallereventlog"."transfer_history", "callcenter_diallereventlog"."call_duration", "callcenter_diallereventlog"."bill_sec", "callcenter_diallereventlog"."ivr_duration", "callcenter_diallereventlog"."hangup_time", "callcenter_diallereventlog"."dialed_status", "callcenter_diallereventlog"."hangup_cause", "callcenter_diallereventlog"."hangup_cause_code", "callcenter_diallereventlog"."channel", "callcenter_diallereventlog"."info", "callcenter_diallereventlog"."uniqueid", "callcenter_diallereventlog"."created", "callcenter_diallereventlog"."updated", "callcenter_campaign"."id", "callcenter_campaign"."name", "callcenter_campaign"."slug", "callcenter_campaign"."description", "callcenter_campaign"."schedule_id", "callcenter_campaign"."dial_method", "callcenter_campaign"."wfh_dispo", "callcenter_campaign"."transfer", "callcenter_campaign"."conference", "callcenter_campaign"."search_alternate", "callcenter_campaign"."callback_mode", "callcenter_campaign"."callback_threshold", "callcenter_campaign"."queued_busy_callback", "callcenter_campaign"."dnc", "callcenter_campaign"."show_queue_call_count", "callcenter_campaign"."hopper_level", "callcenter_campaign"."portifolio", "callcenter_campaign"."css", "callcenter_campaign"."wfh", "callcenter_campaign"."wfh_request_call", "callcenter_campaign"."auto_qcb_dial", "callcenter_campaign"."auto_ac_dial", "callcenter_campaign"."switch_id", "callcenter_campaign"."trunk_id", "callcenter_campaign"."trunk_group_id", "callcenter_campaign"."is_trunk_group", "callcenter_campaign"."trunk_did", "callcenter_campaign"."status", "callcenter_campaign"."created_date", "callcenter_campaign"."modified_date", "callcenter_campaign"."lead_priotize", "callcenter_campaign"."site_id", "callcenter_campaign"."auto_feedback", "callcenter_campaign"."auto_feedback_time", "callcenter_campaign"."created_by_id", "callcenter_campaign"."auto_progressive_time", "callcenter_campaign"."inbound_threshold", "callcenter_campaign"."sms_gateway_id", "callcenter_campaign"."email_gateway_id", "callcenter_campaign"."all_caller_id", "callcenter_user"."id", "callcenter_user"."password", "callcenter_user"."last_login", "callcenter_user"."is_superuser", "callcenter_user"."username", "callcenter_user"."first_name", "callcenter_user"."last_name", "callcenter_user"."email", "callcenter_user"."is_staff", "callcenter_user"."is_active", "callcenter_user"."date_joined", "callcenter_user"."site_id", "callcenter_user"."date_of_birth", "callcenter_user"."user_role_id", "callcenter_user"."reporting_to_id", "callcenter_user"."call_type", "callcenter_user"."user_timezone", "callcenter_user"."trunk_id", "callcenter_user"."caller_id", "callcenter_user"."created", "callcenter_user"."updated", "callcenter_user"."password_date", "callcenter_user"."employee_id", "callcenter_user"."email_password", "callcenter_user"."created_by_id" FROM "callcenter_diallereventlog" LEFT OUTER JOIN "callcenter_user" ON ("callcenter_diallereventlog"."user_id" = "callcenter_user"."id") LEFT OUTER JOIN "callcenter_campaign" ON ("callcenter_diallereventlog"."campaign_id" = "callcenter_campaign"."id") WHERE ("callcenter_diallereventlog"."created" >= '2025-01-06T00:00:00'::timestamp  AND "callcenter_diallereventlog"."created" <= '2025-01-22T10:04:00'::timestamp AND "callcenter_diallereventlog"."dialed_status" = 'Connected' AND (("callcenter_diallereventlog"."campaign_name" IN ('Rani_Predictive', 'HFC_Adhoc', 'ManualCallBack', 'Secured_South', 'North_Recovery', 'West_Recovery', 'South_Recovery', 'Rural_Sales', 'Mumbai_Predictive', 'Telugu', 'SOUTH_HFC', 'Viba_Predictive', 'GGN_BKT', 'GGN_BCP', 'NORTH_CAT_A', 'NORTH_CAT_C', 'NORTH_ENACH', 'WEST_CAT_C', 'WEST_CAT_A', 'SOUTH_CAT_A', 'SOUTH_CAT_C', 'SOUTH_ENACH', 'WEST_ENACH', 'RK_Pred', 'RD_Pred', 'MR_Pred', 'PM_Pred', 'GGN_Predictive', 'Telugu_PR', 'Kannada_PR', 'Tamil_PR_Test', 'Mumbai_Caution_Calling', 'HFC_Cloud', 'Chennai_Secured', 'Mumbai_PL', 'Mumbai_HFC', 'Mum_LAP_BIL_TW', 'Mumbai', 'Chennai_Caution', 'Chennai_Rural', 'South_Secured', 'Malyalam', 'Tamil', 'Kannada') AND collace("callcenter_diallereventlog"."user_id",0) IN (510, 509, 504, 493, 492, 491, 479, 467, 458, 446, 436, 435, 434, 421, 420, 412, 410, 409, 400, 390, 328, 327, 325, 315, 310, 292, 281, 277, 222, 189, 188, 187, 45, 0))  ) ORDER BY "callcenter_diallereventlog"."init_time" DESC






dup:

OR "callcenter_diallereventlog"."user_id" IN (510, 509, 504, 493, 492, 491, 479, 467, 458, 446, 436, 435, 434, 421, 420, 412, 410, 409, 400, 390, 328, 327, 325, 315, 310, 292, 281, 277, 222, 189, 188, 187, 45)

OR ("callcenter_diallereventlog"."campaign_name" IN ('Rani_Predictive', 'HFC_Adhoc', 'ManualCallBack', 'Secured_South', 'North_Recovery', 'West_Recovery', 'South_Recovery', 'Rural_Sales', 'Mumbai_Predictive', 'Telugu', 'SOUTH_HFC', 'Viba_Predictive', 'GGN_BKT', 'GGN_BCP', 'NORTH_CAT_A', 'NORTH_CAT_C', 'NORTH_ENACH', 'WEST_CAT_C', 'WEST_CAT_A', 'SOUTH_CAT_A', 'SOUTH_CAT_C', 'SOUTH_ENACH', 'WEST_ENACH', 'RK_Pred', 'RD_Pred', 'MR_Pred', 'PM_Pred', 'GGN_Predictive', 'Telugu_PR', 'Kannada_PR', 'Tamil_PR_Test', 'Mumbai_Caution_Calling', 'HFC_Cloud', 'Chennai_Secured', 'Mumbai_PL', 'Mumbai_HFC', 'Mum_LAP_BIL_TW', 'Mumbai', 'Chennai_Caution', 'Chennai_Rural', 'South_Secured', 'Malyalam', 'Tamil', 'Kannada') AND "callcenter_diallereventlog"."user_id" IS NULL) OR "callcenter_diallereventlog"."campaign_id" IS NULL OR "callcenter_diallereventlog"."user_id" IS NULL)




Query 4 :- 

select sum(total_agentcalls_today) as total_agentcalls_today, sum(total_agentcalls_month) as total_agentcalls_month from (

SELECT COUNT("callcenter_calldetail"."id") AS "total_agentcalls_today", 0 AS "total_agentcalls_month" FROM "callcenter_calldetail" INNER JOIN "callcenter_cdrfeedbck" ON ("callcenter_calldetail"."id" = "callcenter_cdrfeedbck"."calldetail_id") WHERE ("callcenter_calldetail"."user_id" = 397 AND "callcenter_cdrfeedbck"."id" >= 0 and ("callcenter_calldetail"."created" >= '2025-01-22T00:00:00'::timestamp AND "callcenter_calldetail"."created" <= '2025-01-23T00:00:00'::timestamp))
union all
SELECT 0 AS "total_agentcalls_today", COUNT("callcenter_calldetail"."id")   AS "total_agentcalls_month" FROM "callcenter_calldetail" INNER JOIN "callcenter_cdrfeedbck" ON ("callcenter_calldetail"."id" = "callcenter_cdrfeedbck"."calldetail_id") WHERE ("callcenter_calldetail"."user_id" = 397 AND "callcenter_cdrfeedbck"."id" >= 0 and EXTRACT('month' FROM "callcenter_calldetail"."created") = 1)) as tb1

Query 5 :-

SELECT COUNT(contact.id) AS "__count" FROM "crm_contact" INNER JOIN "crm_phonebook" ON ("crm_contact"."phonebook_id" = "crm_phonebook"."id") WHERE ("crm_contact"."campaign" IN ('Rani_Predictive', 'HFC_Adhoc', 'Secured_South', 'North_Recovery', 'West_Recovery', 'South_Recovery', 'Rural_Sales', 'Mumbai_Predictive', 'Telugu', 'SOUTH_HFC', 'Viba_Predictive', 'GGN_BKT', 'GGN_BCP', 'NORTH_CAT_A', 'NORTH_CAT_C', 'NORTH_ENACH', 'WEST_CAT_C', 'WEST_CAT_A', 'SOUTH_CAT_A', 'SOUTH_CAT_C', 'SOUTH_ENACH', 'WEST_ENACH', 'RK_Pred', 'RD_Pred', 'MR_Pred', 'PM_Pred', 'GGN_Predictive', 'Telugu_PR', 'Kannada_PR', 'Tamil_PR_Test', 'Mumbai_Caution_Calling', 'HFC_Cloud', 'Chennai_Secured', 'Mumbai_HFC', 'Mum_LAP_BIL_TW', 'Mumbai', 'Chennai_Caution', 'Chennai_Rural', 'South_Secured', 'Malyalam', 'Tamil', 'Kannada') AND "crm_phonebook"."status" = 'Active')


Query 6:-

SELECT COUNT("callcenter_calldetail"."id") AS "id_count" FROM "callcenter_calldetail" INNER JOIN "callcenter_cdrfeedbck" ON ("callcenter_calldetail"."id" = "callcenter_cdrfeedbck"."calldetail_id") WHERE (EXTRACT('month' FROM "callcenter_calldetail"."created") = 1 AND "callcenter_calldetail"."user_id" = 296 AND "callcenter_cdrfeedbck"."id" >= 0)

sugeested create month and year in calldetail report table add tigger 

Query 7:-

SELECT "callcenter_diallereventlog"."id" FROM "callcenter_diallereventlog" WHERE ("callcenter_diallereventlog"."created" >= '2025-01-06T00:00:00'::timestamp AND "callcenter_diallereventlog"."dialed_status" = 'Connected' AND "callcenter_diallereventlog"."created" <= '2025-01-22T09:26:00'::timestamp AND (("callcenter_diallereventlog"."campaign_name" IN ('Rani_Predictive', 'HFC_Adhoc', 'ManualCallBack', 'Secured_South', 'North_Recovery', 'West_Recovery', 'South_Recovery', 'Rural_Sales', 'Mumbai_Predictive', 'Telugu', 'SOUTH_HFC', 'Viba_Predictive', 'GGN_BKT', 'GGN_BCP', 'NORTH_CAT_A', 'NORTH_CAT_C', 'NORTH_ENACH', 'WEST_CAT_C', 'WEST_CAT_A', 'SOUTH_CAT_A', 'SOUTH_CAT_C', 'SOUTH_ENACH', 'WEST_ENACH', 'RK_Pred', 'RD_Pred', 'MR_Pred', 'PM_Pred', 'GGN_Predictive', 'Telugu_PR', 'Kannada_PR', 'Tamil_PR_Test', 'Mumbai_Caution_Calling', 'HFC_Cloud', 'Chennai_Secured', 'Mumbai_PL', 'Mumbai_HFC', 'Mum_LAP_BIL_TW', 'Mumbai', 'Chennai_Caution', 'Chennai_Rural', 'South_Secured', 'Malyalam', 'Tamil', 'Kannada') AND "callcenter_diallereventlog"."user_id" IN (510, 509, 504, 493, 492, 491, 479, 467, 458, 446, 436, 435, 434, 421, 420, 412, 410, 409, 400, 390, 328, 327, 325, 315, 310, 292, 281, 277, 222, 189, 188, 187, 45)) OR "callcenter_diallereventlog"."user_id" IN (510, 509, 504, 493, 492, 491, 479, 467, 458, 446, 436, 435, 434, 421, 420, 412, 410, 409, 400, 390, 328, 327, 325, 315, 310, 292, 281, 277, 222, 189, 188, 187, 45	) OR ("callcenter_diallereventlog"."campaign_name" IN ('Rani_Predictive', 'HFC_Adhoc', 'ManualCallBack', 'Secured_South', 'North_Recovery', 'West_Recovery', 'South_Recovery', 'Rural_Sales', 'Mumbai_Predictive', 'Telugu', 'SOUTH_HFC', 'Viba_Predictive', 'GGN_BKT', 'GGN_BCP', 'NORTH_CAT_A', 'NORTH_CAT_C', 'NORTH_ENACH', 'WEST_CAT_C', 'WEST_CAT_A', 'SOUTH_CAT_A', 'SOUTH_CAT_C', 'SOUTH_ENACH', 'WEST_ENACH', 'RK_Pred', 'RD_Pred', 'MR_Pred', 'PM_Pred', 'GGN_Predictive', 'Telugu_PR', 'Kannada_PR', 'Tamil_PR_Test', 'Mumbai_Caution_Calling', 'HFC_Cloud', 'Chennai_Secured', 'Mumbai_PL', 'Mumbai_HFC', 'Mum_LAP_BIL_TW', 'Mumbai', 'Chennai_Caution', 'Chennai_Rural', 'South_Secured', 'Malyalam', 'Tamil', 'Kannada') AND "callcenter_diallereventlog"."user_id" IS NULL) OR "callcenter_diallereventlog"."campaign_id" IS NULL OR "callcenter_diallereventlog"."user_id" IS NULL)) ORDER BY "callcenter_diallereventlog"."init_time" DESC


Query 8:-

SELECT COUNT(*) AS "__count" FROM "callcenter_diallereventlog" WHERE ("callcenter_diallereventlog"."created" >= '2025-01-06T00:00:00'::timestamp AND "callcenter_diallereventlog"."dialed_status" = 'Connected' AND "callcenter_diallereventlog"."created" <= '2025-01-22T10:07:00'::timestamp AND (("callcenter_diallereventlog"."campaign_name" IN ('Rani_Predictive', 'HFC_Adhoc', 'ManualCallBack', 'Secured_South', 'North_Recovery', 'West_Recovery', 'South_Recovery', 'Rural_Sales', 'Mumbai_Predictive', 'Telugu', 'SOUTH_HFC', 'Viba_Predictive', 'GGN_BKT', 'GGN_BCP', 'NORTH_CAT_A', 'NORTH_CAT_C', 'NORTH_ENACH', 'WEST_CAT_C', 'WEST_CAT_A', 'SOUTH_CAT_A', 'SOUTH_CAT_C', 'SOUTH_ENACH', 'WEST_ENACH', 'RK_Pred', 'RD_Pred', 'MR_Pred', 'PM_Pred', 'GGN_Predictive', 'Telugu_PR', 'Kannada_PR', 'Tamil_PR_Test', 'Mumbai_Caution_Calling', 'HFC_Cloud', 'Chennai_Secured', 'Mumbai_PL', 'Mumbai_HFC', 'Mum_LAP_BIL_TW', 'Mumbai', 'Chennai_Caution', 'Chennai_Rural', 'South_Secured', 'Malyalam', 'Tamil', 'Kannada') AND "callcenter_diallereventlog"."user_id" IN (510, 509, 504, 493, 492, 491, 479, 467, 458, 446, 436, 435, 434, 421, 420, 412, 410, 409, 400, 390, 328, 327, 325, 315, 310, 292, 281, 277, 222, 189, 188, 187, 45)) OR "callcenter_diallereventlog"."user_id" IN (510, 509, 504, 493, 492, 491, 479, 467, 458, 446, 436, 435, 434, 421, 420, 412, 410, 409, 400, 390, 328, 327, 325, 315, 310, 292, 281, 277, 222, 189, 188, 187, 45) OR ("callcenter_diallereventlog"."campaign_name" IN ('Rani_Predictive', 'HFC_Adhoc', 'ManualCallBack', 'Secured_South', 'North_Recovery', 'West_Recovery', 'South_Recovery', 'Rural_Sales', 'Mumbai_Predictive', 'Telugu', 'SOUTH_HFC', 'Viba_Predictive', 'GGN_BKT', 'GGN_BCP', 'NORTH_CAT_A', 'NORTH_CAT_C', 'NORTH_ENACH', 'WEST_CAT_C', 'WEST_CAT_A', 'SOUTH_CAT_A', 'SOUTH_CAT_C', 'SOUTH_ENACH', 'WEST_ENACH', 'RK_Pred', 'RD_Pred', 'MR_Pred', 'PM_Pred', 'GGN_Predictive', 'Telugu_PR', 'Kannada_PR', 'Tamil_PR_Test', 'Mumbai_Caution_Calling', 'HFC_Cloud', 'Chennai_Secured', 'Mumbai_PL', 'Mumbai_HFC', 'Mum_LAP_BIL_TW', 'Mumbai', 'Chennai_Caution', 'Chennai_Rural', 'South_Secured', 'Malyalam', 'Tamil', 'Kannada') AND "callcenter_diallereventlog"."user_id" IS NULL) OR "callcenter_diallereventlog"."campaign_id" IS NULL OR "callcenter_diallereventlog"."user_id" IS NULL) AND "callcenter_diallereventlog"."customer_cid" = '9692825206' AND "callcenter_diallereventlog"."campaign_name" IN ('Rural_Sales', 'Chennai_Rural'))


Query 9:-

SELECT callcenter_calldetail.campaign_name as campaign_name , usr.username as user , CONCAT(usr.first_name, ' ' ,usr.last_name) as full_name , callcenter_calldetail.phonebook as phonebook , callcenter_calldetail.customer_cid as customer_cid , callcenter_calldetail.contact_id as contact_id , callcenter_calldetail.uniqueid as lan , callcenter_calldetail.session_uuid as session_uuid , date_trunc('second', COALESCE(callcenter_diallereventlog.init_time, callcenter_calldetail.init_time) at time zone 'Asia/Kolkata') as init_time , date_trunc('second', COALESCE(callcenter_diallereventlog.ring_time, callcenter_calldetail.ring_time) at time zone 'Asia/Kolkata') as ring_time , date_trunc('second', COALESCE(callcenter_diallereventlog.connect_time, callcenter_calldetail.connect_time) at time zone 'Asia/Kolkata') as connect_time , date_trunc('second', COALESCE(callcenter_diallereventlog.hangup_time, callcenter_calldetail.hangup_time) at time zone 'Asia/Kolkata') as hangup_time , COALESCE(callcenter_diallereventlog.wait_time, callcenter_calldetail.wait_time) as wait_time , COALESCE(callcenter_diallereventlog.ring_duration, callcenter_calldetail.ring_duration) as ring_duration , COALESCE(callcenter_diallereventlog.hold_time, callcenter_calldetail.hold_time) as hold_time , callcenter_calldetail.callflow as callflow , callcenter_calldetail.callmode as callmode , COALESCE(callcenter_diallereventlog.bill_sec, callcenter_calldetail.bill_sec) as talk_time , COALESCE(callcenter_diallereventlog.ivr_duration, callcenter_calldetail.ivr_duration) as ivr_duration , COALESCE(callcenter_diallereventlog.call_duration, callcenter_calldetail.call_duration) as call_duration , callcenter_calldetail.feedback_time as wrapup_time , cast(COALESCE(callcenter_diallereventlog.call_duration, callcenter_calldetail.call_duration)::interval + feedback_time::interval as text) as call_length , callcenter_calldetail.hangup_source as hangup_source , callcenter_calldetail.internal_tc_number as internal_tc_number , callcenter_calldetail.external_tc_number as external_tc_number , callcenter_calldetail.progressive_time as progressive_time , callcenter_calldetail.preview_time as preview_time , callcenter_calldetail.predictive_wait_time as predictive_wait_time , callcenter_calldetail.inbound_wait_time as inbound_wait_time , callcenter_calldetail.blended_wait_time as blended_wait_time , COALESCE(callcenter_diallereventlog.hangup_cause, callcenter_calldetail.hangup_cause) as hangup_cause , COALESCE(callcenter_diallereventlog.hangup_cause_code, callcenter_calldetail.hangup_cause_code) as hangup_cause_code , COALESCE(callcenter_diallereventlog.dialed_status, callcenter_calldetail.dialed_status) as dialed_status , callcenter_cdrfeedbck.primary_dispo as primary_dispo , callcenter_cdrfeedbck.feedback ->> 'paid_in_cash_to_agent' as "paid_in_cash_to_agent" , callcenter_cdrfeedbck.feedback ->> 'paid_onlin' as "paid_onlin" , callcenter_cdrfeedbck.feedback ->> 'next_action_date_time' as "next_action_date_time" , callcenter_cdrfeedbck.feedback ->> 'on_or_before_ptp_date' as "on_or_before_ptp_date" , callcenter_cdrfeedbck.feedback ->> 'follow_up' as "follow_up" , callcenter_cdrfeedbck.feedback ->> 'pu_date' as "pu_date" , callcenter_cdrfeedbck.feedback ->> 'ptp_date' as "ptp_date" , callcenter_cdrfeedbck.feedback ->> 'pu_amount' as "pu_amount" , callcenter_cdrfeedbck.feedback ->> 'paid_in_branch' as "paid_in_branch" , callcenter_cdrfeedbck.feedback ->> 'next_action_code' as "next_action_code" , callcenter_cdrfeedbck.feedback ->> 'action_code' as "action_code" , callcenter_cdrfeedbck.feedback ->> 'rfd' as "rfd" , callcenter_cdrfeedbck.feedback ->> 'referral_status' as "referral_status" , callcenter_cdrfeedbck.feedback ->> 'ptp/pu_date' as "ptp/pu_date" , callcenter_cdrfeedbck.feedback ->> 'ptp_amount' as "ptp_amount" , CASE WHEN sms.name IS NULL THEN 'No' ELSE 'Yes' END as sms_sent , sms.name as sms_message , callcenter_cdrfeedbck.comment as comment from callcenter_calldetail left join callcenter_diallereventlog on callcenter_diallereventlog.session_uuid = callcenter_calldetail.session_uuid left join callcenter_cdrfeedbck on callcenter_cdrfeedbck.calldetail_id=callcenter_calldetail.id left join callcenter_user usr on usr.id = callcenter_calldetail.user_id left join callcenter_user supr on supr.id = usr.reporting_to_id left join (select sms.session_uuid as session_uuid, string_agg(template.name, ', ') as name from callcenter_smslog sms left join callcenter_smstemplate template on sms.template_id = template.id left join callcenter_calldetail calldetail on calldetail.session_uuid = sms.session_uuid where calldetail.campaign_name IN ('Rani_Predictive', 'HFC_Adhoc', 'ManualCallBack', 'Secured_South', 'North_Recovery', 'West_Recovery', 'South_Recovery', 'Rural_Sales', 'Mumbai_Predictive', 'Telugu', 'SOUTH_HFC', 'Viba_Predictive', 'GGN_BKT', 'GGN_BCP', 'NORTH_CAT_A', 'NORTH_CAT_C', 'NORTH_ENACH', 'WEST_CAT_C', 'WEST_CAT_A', 'SOUTH_CAT_A', 'SOUTH_CAT_C', 'SOUTH_ENACH', 'WEST_ENACH', 'RK_Pred', 'RD_Pred', 'MR_Pred', 'PM_Pred', 'GGN_Predictive', 'Telugu_PR', 'Kannada_PR', 'Tamil_PR_Test', 'Mumbai_Caution_Calling', 'HFC_Cloud', 'Chennai_Secured', 'Mumbai_PL', 'Mumbai_HFC', 'Mum_LAP_BIL_TW', 'Mumbai', 'Chennai_Caution', 'Chennai_Rural', 'South_Secured', 'Malyalam', 'Tamil', 'Kannada') group by sms.session_uuid) sms on sms.session_uuid = callcenter_calldetail.session_uuid  WHERE ( callcenter_calldetail.created at time zone 'Asia/Kolkata' >= '2025-01-20T00:00:00' and callcenter_calldetail.created at time zone 'Asia/Kolkata' <= '2025-01-20T23:55:00') and (callcenter_calldetail.campaign_name IN ('Rani_Predictive', 'HFC_Adhoc', 'ManualCallBack', 'Secured_South', 'North_Recovery', 'West_Recovery', 'South_Recovery', 'Rural_Sales', 'Mumbai_Predictive', 'Telugu', 'SOUTH_HFC', 'Viba_Predictive', 'GGN_BKT', 'GGN_BCP', 'NORTH_CAT_A', 'NORTH_CAT_C', 'NORTH_ENACH', 'WEST_CAT_C', 'WEST_CAT_A', 'SOUTH_CAT_A', 'SOUTH_CAT_C', 'SOUTH_ENACH', 'WEST_ENACH', 'RK_Pred', 'RD_Pred', 'MR_Pred', 'PM_Pred', 'GGN_Predictive', 'Telugu_PR', 'Kannada_PR', 'Tamil_PR_Test', 'Mumbai_Caution_Calling', 'HFC_Cloud', 'Chennai_Secured', 'Mumbai_PL', 'Mumbai_HFC', 'Mum_LAP_BIL_TW', 'Mumbai', 'Chennai_Caution', 'Chennai_Rural', 'South_Secured', 'Malyalam', 'Tamil', 'Kannada')) order by callcenter_calldetail.created desc


Query 10:-

select user_id,event,min(created) as event_min_time,max(created) as event_max_time,campaign_name,count(user_id) as activity_count,
                        sum(break_time) as break_time,sum(pause_progressive_time) as pause_progressive_time,
                        sum(predictive_time) as predictive_time,sum(progressive_time) as progressive_time,
                        sum(preview_time) as preview_time,sum(predictive_wait_time) as predictive_wait_time,
                        sum(inbound_time) as inbound_time,sum(blended_time) as blended_time,
                        sum(inbound_wait_time) as inbound_wait_time,sum(blended_wait_time) as blended_wait_time,
                        sum(idle_time) as app_idle_time from callcenter_agentactivity 
                        where created > '2025-01-01 00:00:00' and created < '2025-01-22 09:27' 
                        group by user_id,event,campaign_name
                        
                        
Query 11:-

SELECT *, id as contact_id FROM crm_contact WHERE campaign='Chennai_Rural' AND phonebook_id = ( select id from crm_phonebook where status='Active' AND id = 220) AND status != 'Queued' AND (  crm_contact.dial_count = '0' OR  crm_contact.status = 'NotDialed') order by  crm_contact.disposition DESC

instand * user what we need columns add 



                        



